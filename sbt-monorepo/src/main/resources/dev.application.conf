include "config"

akka {
  loglevel = "DEBUG"

  actor {
    # serialize-messages = on
  }

  http {
    server {
      hostname = ${HOSTNAME}
      port = 8080
    }
  }

  actor.provider = cluster

  discovery {
    config.services = {
      local-cluster = {
        endpoints = [
          {
            host = "127.0.0.1"
            port = 8558
          },
          {
            host = "127.0.0.2"
            port = 8558
          },
          {
            host = "127.0.0.3"
            port = 8558
          }
        ]
      }
    }
  }

  remote.artery {
    canonical.hostname = ${HOSTNAME}
  }

  cluster {
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"

    shutdown-after-unsuccessful-join-seed-nodes = 120s
    coordinated-shutdown.exit-jvm = on
    min-nr-of-members = 3

    sharding {
      least-shard-allocation-strategy.rebalance-absolute-limit = 20
      passivation {
        strategy = default-strategy
      }
    }
  }

  management {
    cluster.bootstrap {
      contact-point-discovery {
        service-name = "local-cluster"
        discovery-method = config
      }
    }
    http {
      hostname = ${HOSTNAME}
      port = 8558
    }
  }

  persistence {
    journal.plugin = "akka.persistence.cassandra.journal"
    snapshot-store.plugin = "akka.persistence.cassandra.snapshot"

    cassandra {
      journal.keyspace-autocreate = true
      journal.tables-autocreate = true

      snapshot.keyspace-autocreate = true
      snapshot.tables-autocreate = true      
    }
  }
}

datastax-java-driver.advanced.reconnect-on-init = true