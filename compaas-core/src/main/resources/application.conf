include "config"

akka {
  loglevel = ${?LOG_LEVEL}

  log-config-on-start = ${?LOG_CONFIG_ON_START}

  actor {
    serializers {
      jackson-cbor = "akka.serialization.jackson.JacksonCborSerializer"
    }
    serialization-bindings {
      "compaas.core.Serializable" = jackson-cbor
    }
    serialize-messages = on
    provider = cluster
  }

  remote.artery {
    log-frame-size-exceeding = 10000b
  }

  coordinated-shutdown { exit-jvm = on }

  cluster {
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"

    shutdown-after-unsuccessful-join-seed-nodes = 60s

    sharding {
      least-shard-allocation-strategy {
        rebalance-absolute-limit = 20
        rebalance-relative-limit = 0.2
      }
      passivation {
        strategy = default-strategy
      }
    }
  }

  management {
    cluster.bootstrap {
      contact-point-discovery {
        discovery-method = kubernetes-api
        required-contact-point-nr = ${?REQUIRED_CONTACT_POINT_NR}
      }
    }
  }

  persistence {
    journal {
      plugin = "akka.persistence.r2dbc.journal"
    }
    snapshot-store {
      plugin = "akka.persistence.r2dbc.snapshot"
    }
    state {
      plugin = "akka.persistence.r2dbc.state"
    }
    r2dbc {
      dialect = "postgres"
      connection-factory {
        driver = "postgres"
        host = "postgres"
        host = ${?DB_HOST}
        database = "postgres"
        database = ${?DB_NAME}
        user = "postgres"
        user = ${?DB_USER}
        password = "password"
        password = ${?DB_PASSWORD}
      }
    }
  }
}
